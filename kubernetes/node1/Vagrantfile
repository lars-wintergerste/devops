# -*- mode: ruby -*-
# vi: set ft=ruby :

#
#	Ubuntu Xenial 64-bit Linux Node mit Docker und Kubernetes
#

Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/xenial64"
  # resize hd, need a plugin vagrant-disksize, see https://github.com/sprotheroe/vagrant-disksize
  # config.disksize.size = '40GB'
      
  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.hostname = "node1"
  config.vm.network "private_network", ip: "192.168.137.110"
  # config.vm.network "public_network", bridge: "enp0s8"

  # default router bei Verwendung mit WLAN LERNKUBE (default gw 192.168.3.1) oder RAS Aktivierung in Windows, bzw. auf NIC
  # config.vm.provision "shell",
  #  run: "always",
  #  inline: "route add default gw 192.168.137.1 enp0s8 && route del default gw 10.0.2.2 enp0s3"  

  # Gemeinsames Datenverzeichnis fuer Kubernetes Master und Nodes
  config.vm.synced_folder "../data", "/data"
  
  config.vm.provider "virtualbox" do |vb|
     vb.memory = "2048"
  end

  # Docker Provisioner
  config.vm.provision "docker" do |d|
  end
  
  config.vm.provision "shell", inline: <<-SHELL 
    # Debug ON!!!
    set -o xtrace
    
	# Install Kubernetes
	curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    sudo echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" >> /etc/apt/sources.list.d/Kubernetes.list
    sudo apt-get update
    sudo apt-get install -y kubelet=1.9.7-00 kubeadm=1.9.7-00 
    
SHELL
end
